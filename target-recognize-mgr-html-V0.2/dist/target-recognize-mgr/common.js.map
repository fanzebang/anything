{"version":3,"sources":["./src/app/core/app-common.module.ts","./src/app/core/app-common.pipes.ts","./src/app/core/http-entity.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {KbPipe, LocalImgFilePipe, MarkedRectImagePipe, OssPathPipe, SampleTypeIdPathPipe, MarkStatusPipe} from './app-common.pipes';\r\n\r\nconst COMMON_PIPES = [OssPathPipe, KbPipe, LocalImgFilePipe, MarkedRectImagePipe, SampleTypeIdPathPipe, MarkStatusPipe];\r\n\r\n@NgModule({\r\n  declarations: [...COMMON_PIPES],\r\n  exports: [...COMMON_PIPES]\r\n})\r\nexport class AppCommonModule {\r\n\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {environment} from '../../environments/environment';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport {HttpResult, SampleOssFile} from './http-entity';\r\nimport {HttpClient} from '@angular/common/http';\r\ndeclare var Tiff:any;\r\n\r\n@Pipe({name: 'ossPath'})\r\nexport class OssPathPipe implements PipeTransform {\r\n  transform(tiem: any): string {\r\n    // .ossKey\r\n\r\n    // if(tiem.ossKey){\r\n    //   var xhr = new XMLHttpRequest()\r\n    //   xhr.responseType = 'arraybuffer';\r\n   \r\n    //   var url = localStorage.getItem('sampleResourcePath') + '/' + tiem.ossKey\r\n    //   xhr.open('GET', url)\r\n    //   var tiff = new Tiff({buffer: xhr.response})\r\n    //  var imgSrc = tiff.toDataURL() // 是转化成base64的api\r\n    //     console.log(Tiff)\r\n    //     // return url;\r\n\r\n    //   // xhr.onload = function (e) {\r\n    //   //   var tiff = new Tiff({buffer: xhr.response})\r\n    //   //   console.log(tiff)\r\n    \r\n    //   //   };\r\n      \r\n    // }else{\r\n    //   return localStorage.getItem('sampleResourcePath') + '/' + tiem;\r\n    // }\r\n\r\n\r\n    return localStorage.getItem('sampleResourcePath') + '/' + tiem;\r\n  \r\n  }\r\n}\r\n\r\n@Pipe({name: 'KB'})\r\nexport class KbPipe implements PipeTransform {\r\n  transform(bytes: number): string {\r\n    return (Math.ceil(bytes / 1024)).toFixed(0) + 'KB';\r\n  }\r\n}\r\n\r\n@Pipe({name: 'LocalImgFile'})\r\nexport class LocalImgFilePipe implements PipeTransform {\r\n  transform(file: File): Observable<any> {\r\n    const subject = new Subject<any>();\r\n\r\n    const fr = new FileReader();\r\n    fr.onload = () => {\r\n      subject.next(fr.result);\r\n    };\r\n    fr.readAsDataURL(file);\r\n    return subject.asObservable();\r\n  }\r\n}\r\n\r\n@Pipe({name: 'marks'})\r\nexport class MarkStatusPipe implements PipeTransform {\r\n  transform(status: number): string {\r\n    if (status === 0) {\r\n      return '未标注';\r\n    } else if (status === 1) {\r\n      return '已标注';\r\n    } else if (status === 2) {\r\n      return '标注错误';\r\n    } else if (status === 3) {\r\n      return '正确的标注(审核通过)';\r\n    } else if(status == 4){\r\n      return '客户端图片检测纠错过来的数据';\r\n    }\r\n  }\r\n}\r\n\r\n\r\n@Pipe({name: 'MarkedRectImage'})\r\nexport class MarkedRectImagePipe implements PipeTransform {\r\n  transform(rect: any, sampleFile: SampleOssFile): Observable<any> {\r\n\r\n    const subject = new Subject<any>();\r\n\r\n    const image = new Image();\r\n    image.onload = () => {\r\n      const clipWidth = rect.xmax - rect.xmin;\r\n      const clipHeight = rect.ymax - rect.ymin;\r\n\r\n      const tempCanvasElm = document.createElement('canvas');\r\n      tempCanvasElm.width = clipWidth;\r\n      tempCanvasElm.height = clipHeight;\r\n\r\n      const ctx = tempCanvasElm.getContext('2d');\r\n      //ctx.drawImage(image, rect.minX, rect.minY, clipWidth, clipHeight, 0, 0, clipWidth, clipHeight);\r\n      ctx.drawImage(image, rect.xmin, rect.ymin, clipWidth, clipHeight, 0, 0, clipWidth, clipHeight);\r\n\r\n      const dataURL = tempCanvasElm.toDataURL('image/jpeg');\r\n\r\n      subject.next(dataURL);\r\n    };\r\n  \r\n    image.crossOrigin = 'anonymous';\r\n    image.src = localStorage.getItem('sampleResourcePath')+`/${sampleFile.ossKey}`;\r\n\r\n    return subject.asObservable();\r\n  }\r\n}\r\n\r\n@Pipe({name: 'SampleTypeIdPath'})\r\nexport class SampleTypeIdPathPipe implements PipeTransform {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  transform(sampleId: string): Observable<string> {\r\n    const subject = new Subject<any>();\r\n    this.http.get(`${environment.API_URL}/v1/sample-oss-types/${sampleId}`).subscribe((result: HttpResult<any>) => {\r\n      if (HttpResult.succeed(result.code)) {\r\n        subject.next(result.data.samplePath);\r\n      }\r\n    });\r\n    return subject.asObservable();\r\n  }\r\n}\r\n","export class HttpResult<T> {\r\n  code: number;\r\n  message: string;\r\n  data: T;\r\n\r\n  static succeed(code: number): boolean {\r\n    return code === 1;\r\n  }\r\n}\r\n\r\nexport interface ApiPage<T> {\r\n  current: number;\r\n  pages: number;\r\n  records: T[];\r\n  size: number;\r\n  total: number;\r\n}\r\n\r\nexport class User {\r\n  id: number;\r\n  loginName: string;\r\n  name: string;\r\n  leadalId: string;\r\n}\r\n\r\nexport class StatInfo {\r\n  largeTypeNum: string;\r\n  smallTypeNum: string;\r\n  totalNum: string;\r\n  markNum: string;\r\n  modelTypeNum: string;\r\n  totalUserNum: string;\r\n  modelNum: string;\r\n}\r\n\r\nexport class SampleOssType {\r\n  id: number;\r\n  sampleTypeName: string;\r\n  sampleUpId: number;\r\n  samplePath: string;\r\n  sampleTypeNumber: number;\r\n  isLeaf: boolean;\r\n  imageCount: number;\r\n}\r\n\r\nexport interface ApiPage<T> {\r\n  current: number;\r\n  pages: number;\r\n  records: T[];\r\n  size: number;\r\n  total: number;\r\n}\r\n\r\nexport class SampleOssFile {\r\n  id: number;\r\n  sampleTypeId: number;\r\n  originFileName: string;\r\n  ossKey: string;\r\n  samplePath: string;\r\n  contentType: string;\r\n  bucketName: string;\r\n  width: number;\r\n  height: number;\r\n  sampleStatus: number;\r\n  markStatus: number;\r\n  createdTime: string;\r\n  createdBy: number;\r\n  downloadNumber: number;\r\n  trainNumber: number;\r\n  browseNumber: number;\r\n  labelMessage?: string;\r\n  createdName?: string;\r\n}\r\n\r\nexport class ProgressDto {\r\n  id: number;\r\n  name: string;\r\n  jd: number;\r\n}\r\n\r\nexport class DataTrain {\r\n  id: number;\r\n\r\n /**\r\n   * 创建任务的类别\r\n   */\r\n  lastClass:String;\r\n\r\n  /**\r\n   * 任务名称\r\n   */\r\n  taskName: string;\r\n\r\n   /**\r\n   * 模型说明\r\n   */\r\n taskDetail: string;\r\n\r\n  /**\r\n   * 任务模式\r\n   */\r\n  taskPattern: number;\r\n\r\n  /**\r\n   * 基准模型\r\n   */\r\n  normModel: number;\r\n\r\n  /**\r\n   * 任务方式\r\n   */\r\n  taskMode: number;\r\n\r\n   /**\r\n   * 任务方式\r\n   */\r\n    taskModeName: string;\r\n  /**\r\n   * 训练类别  图片的类型\r\n   */\r\n\r\n  taskSampleType: string;\r\n\r\n  /**\r\n   * 任务的状态\r\n   * -1正在排位/0正在训练/1暂停训练/2训练完成/3 强制结束\r\n   */\r\n  taskStatus: number;\r\n\r\n  /**\r\n   * 任务的部署 是否已部署\r\n   */\r\n  taskDeploy: boolean;\r\n\r\n  createdBy: number;\r\n\r\n  createdTime: string;\r\n\r\n  typeSource: string;\r\n\r\n  taskProgress: number;\r\n  precision: number;\r\n  recall: number;\r\n  compareName?: string;\r\n}\r\n\r\nexport class LabelTask {\r\n  id: number;\r\n\r\n  // 上传时间 创建时间\r\n  createdTime: string;\r\n\r\n  //创建人ID\r\n  createdBy: number;\r\n\r\n  //创建人昵称\r\n  createdByName: string;\r\n\r\n  //地区\r\n  area: string;\r\n\r\n  //权限\r\n  authority: string;\r\n\r\n  //图片的总数\r\n  countFile: number;\r\n\r\n  //已审核的图片\r\n  checkFile: number;\r\n\r\n  //文件的ID\r\n  fileIds: string;\r\n\r\n  sampleFiles?: SampleOssFile[];\r\n}\r\n\r\n"],"sourceRoot":"webpack:///"}