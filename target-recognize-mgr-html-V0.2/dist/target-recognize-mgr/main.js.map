{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/auth.interceptor.ts","./src/app/icons-provider.module.ts","./src/app/pages/sso/sso.component.ts","./src/app/state/login.action.ts","./src/app/state/login.state.ts","./src/app/state/rename-sample-oss-type.action.ts","./src/app/state/rename-sample-oss-type.state.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {SsoComponent} from \"./pages/sso/sso.component\";\r\n\r\nconst routes: Routes = [\r\n  {path: '', pathMatch: 'full', redirectTo: '/console/data-manage'},\r\n  {\r\n    path: 'console',\r\n    loadChildren: () => import('./pages/console/console.module').then(m => m.ConsoleModule)\r\n  },\r\n  {\r\n    path: 'login',\r\n    loadChildren: () => import('./pages/login/login.module').then(m => m.LoginModule)\r\n  },\r\n  {\r\n    path: 'sso', component: SsoComponent\r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Store} from '@ngxs/store';\r\nimport {LoginAction} from './state/login.action';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {environment} from \"../environments/environment\";\r\nimport {HttpClient, HttpParams} from '@angular/common/http';\r\nimport {HttpResult} from './core/http-entity';\r\nvar $:any;\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.less']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(private store: Store, private router: Router, private route: ActivatedRoute,public http:HttpClient) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // const heard = location.search;\r\n    // if (heard) {\r\n    //   if (heard.concat('jwt')) {\r\n    //     localStorage.setItem('Bearer', heard.split('=')[1]);\r\n    //     this.store.dispatch(new LoginAction(heard.split('=')[1])).subscribe(() => {\r\n    //       this.router.navigate(['/console/data-manage']);\r\n    //     });\r\n    //   }\r\n    // }\r\n\r\n    var heard:any = location.search;\r\n    var access_token:any = heard.substring(1).split(\"=\")[0]\r\n     var pointLogin:any = heard.substring(1).split(\"=\")\r\n \r\n \r\n     if (heard && access_token != 'access_token') {\r\n        //  if(heard.indexOf(\"result\") != -1){\r\n        //    var loginData:any = heard.split('&')[1].substr(7).substr(1);\r\n        //     loginData = loginData.substr(0,loginData.length-1).split(',')\r\n        //    loginData = loginData.map(x=>{\r\n        //         if(x.startsWith(\"%20\")){\r\n        //           return x.substr(3)\r\n        //         }else{\r\n        //           return x\r\n        //         }\r\n        //     })\r\n        //     loginData.forEach((x)=>{\r\n        //        let itemKey = x.split('=')[0]\r\n        //        let itemValue = x.split('=')[1]\r\n        //        localStorage.setItem(itemKey,itemValue)\r\n        //     })\r\n        //  }\r\n       if (heard.concat('jwt')) {\r\n         let Bearer = heard.split('=')[1];\r\n        \r\n         localStorage.setItem('Bearer', Bearer);\r\n\r\n         setTimeout(() => {\r\n          this.getUrlPath()\r\n        }, 200);\r\n\r\n       }\r\n     }else if(access_token == 'access_token'){\r\n       window.location.href= `${environment.API_URL}/v1/sso/welcome-mgr?access_token=${pointLogin[1]}`\r\n     }\r\n\r\n\r\n    const jwt = localStorage.getItem('Bearer');\r\n    \r\n    if (jwt) {\r\n      this.store.dispatch(new LoginAction(jwt));\r\n    }\r\n\r\n    document.oncontextmenu =function () {return false; };\r\n\r\n  }\r\n\r\n\r\n  getUrlPath(){\r\n    this.http.get(`${environment.API_URL}/v1/login/getUrlPath`).subscribe((loginResult: HttpResult<string>) => {\r\n        var data=JSON.stringify(loginResult);\r\n              var str=JSON.parse(data); \r\n              var sampleResourcePath=JSON.stringify(str.sampleResourcePath);\r\n                  sampleResourcePath=sampleResourcePath.substring(1,sampleResourcePath.length-1);\r\n               localStorage.setItem('sampleResourcePath',sampleResourcePath);\r\n            this.store.dispatch(new LoginAction( localStorage.getItem('Bearer'))).subscribe(() => {\r\n                this.router.navigate(['/console/data-manage']);\r\n          });\r\n    })\r\n  }\r\n\r\n \r\n\r\n\r\n}\r\n","<router-outlet></router-outlet>\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {IconsProviderModule} from './icons-provider.module';\r\nimport {NzLayoutModule} from 'ng-zorro-antd/layout';\r\nimport {NzMenuModule} from 'ng-zorro-antd/menu';\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {NZ_I18N} from 'ng-zorro-antd/i18n';\r\nimport {zh_CN} from 'ng-zorro-antd/i18n';\r\nimport {registerLocaleData} from '@angular/common';\r\nimport zh from '@angular/common/locales/zh';\r\nimport {LoginState} from \"./state/login.state\";\r\nimport {NgxsModule} from \"@ngxs/store\";\r\nimport {environment} from \"../environments/environment\";\r\nimport {AuthInterceptor} from \"./core/auth.interceptor\";\r\nimport {SsoComponent} from \"./pages/sso/sso.component\";\r\nimport {RenameSampleOssTypeState} from \"./state/rename-sample-oss-type.state\";\nimport { FormsModule } from '@angular/forms';\r\n\r\nregisterLocaleData(zh);\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent, SsoComponent\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    IconsProviderModule,\r\n    NzLayoutModule,\r\n    NzMenuModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    NgxsModule.forRoot([LoginState, RenameSampleOssTypeState], {\r\n      developmentMode: !environment.production\r\n    }),\r\n    FormsModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: NZ_I18N, useValue: zh_CN\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true\r\n    }\r\n  ],\r\n  exports: [],\r\n  // providers: [{ provide: NZ_I18N, useValue: zh_CN }],\r\n  bootstrap: [AppComponent]\r\n\r\n\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {\r\n  HttpErrorResponse,\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpHeaders,\r\n  HttpInterceptor,\r\n  HttpRequest\r\n} from '@angular/common/http';\r\nimport {observable, Observable, Subject, throwError} from 'rxjs';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {catchError} from 'rxjs/operators';\r\nimport {LoginState, LoginStateModel} from '../state/login.state';\r\nimport {Select} from '@ngxs/store';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  jwt: string;\r\n  @Select(LoginState) jwt$: Observable<LoginStateModel>;\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute) {\r\n    // debugger;\r\n    this.jwt$.subscribe(loginStateModel => {\r\n      this.jwt = loginStateModel.jwt;\r\n    });\r\n    this.route.queryParamMap.subscribe(paramMap => {\r\n      if (paramMap.has('jwt')) {\r\n        // const jwt = paramMap.get('jwt');\r\n        localStorage.setItem('Bearer', paramMap.get('jwt'));\r\n        // this.store.dispatch(new LoginAction(jwt)).subscribe(() => {\r\n        //   this.router.navigate(['/console/data-manage']);\r\n        // });\r\n      }\r\n    });\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let headers = new HttpHeaders();\r\n    if (this.jwt) {\r\n      // const authReq = req.clone({\r\n      //   headers: req.headers.set('Authorization', 'Bearer ' + this.jwt).set('TR-Role', 'TR-User')\r\n      // });\r\n      // return this.doIntercept(authReq, next);\r\n\r\n      headers = headers.append('Authorization', 'Bearer ' + this.jwt).append('TR-Role', 'TR-User');\r\n    } else {\r\n      headers = headers.append('TR-Role', 'TR-Anonymous');\r\n    }\r\n\r\n    const cloneReq = req.clone({\r\n      headers\r\n    });\r\n\r\n    // const reqHeaders = cloneReq.headers;\r\n    // const keys = reqHeaders.keys();\r\n    // console.log('keys is :', keys);\r\n    // keys.forEach(k => {\r\n    //   console.log(`k = ${k}, value = ${reqHeaders.get(k)}`);\r\n    // });\r\n\r\n    return this.doIntercept(cloneReq, next);\r\n  }\r\n\r\n  doIntercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(catchError(err => {\r\n      if (err instanceof HttpErrorResponse) {\r\n        switch ((err as HttpErrorResponse).status) {\r\n          case 401:\r\n            localStorage.removeItem('Bearer');\r\n            this.jwt = null;\r\n            this.router.navigate(['/login']);\r\n            break;\r\n        }\r\n      }\r\n      return throwError(err);\r\n    }));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NZ_ICONS, NzIconModule } from 'ng-zorro-antd/icon';\r\n\r\nimport {\r\n  MenuFoldOutline,\r\n  MenuUnfoldOutline,\r\n  FormOutline,\r\n  DashboardOutline\r\n} from '@ant-design/icons-angular/icons';\r\n\r\nconst icons = [MenuFoldOutline, MenuUnfoldOutline, DashboardOutline, FormOutline];\r\n\r\n@NgModule({\r\n  imports: [NzIconModule],\r\n  exports: [NzIconModule],\r\n  providers: [\r\n    { provide: NZ_ICONS, useValue: icons }\r\n  ]\r\n})\r\nexport class IconsProviderModule {\r\n}\r\n","import {Component, OnInit} from \"@angular/core\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {LoginAction} from \"../../state/login.action\";\r\nimport {Store} from \"@ngxs/store\";\r\n\r\n@Component({\r\n  template: `\r\n    <div style=\"color: white;\">登录中....</div>`\r\n})\r\nexport class SsoComponent implements OnInit {\r\n  constructor(private route: ActivatedRoute, private store: Store, private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParamMap.subscribe(paramMap => {\r\n      if (paramMap.has('jwt')) {\r\n        const jwt = paramMap.get('jwt');\r\n        localStorage.setItem('Bearer', jwt);\r\n        this.store.dispatch(new LoginAction(jwt)).subscribe(() => {\r\n          this.router.navigate(['/console/data-manage']);\r\n        });\r\n      }\r\n    })\r\n\r\n    this.route.fragment.subscribe(fragments => {\r\n      console.log('fragments is :', fragments.split(\"#\"));\r\n      var fragments1:any = fragments.split(\"#\")\r\n\r\n      localStorage.setItem('sampleResourcePath', fragments1[1]);\r\n      localStorage.setItem('Bearer', fragments1[0]);\r\n      this.store.dispatch(new LoginAction(fragments1[0])).subscribe(() => {\r\n        this.router.navigate(['/console/data-manage']);\r\n      });\r\n    })\r\n  }\r\n\r\n\r\n}\r\n","export class LoginAction {\r\n  static readonly type = '[User] Login';\r\n\r\n  constructor(public jwt: string) {\r\n    \r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Action, State, StateContext} from '@ngxs/store';\r\nimport {LoginAction} from './login.action';\r\n\r\nexport interface LoginStateModel {\r\n  jwt: string;\r\n}\r\n\r\n@State<LoginStateModel>({\r\n  name: 'login',\r\n  defaults: {\r\n    jwt: ''\r\n  }\r\n})\r\n@Injectable()\r\nexport class LoginState {\r\n  @Action(LoginAction)\r\n  login(ctx: StateContext<LoginStateModel>, action: LoginAction): void {\r\n    const state = ctx.getState();\r\n    ctx.setState({\r\n      ...state,\r\n      jwt: action.jwt\r\n    });\r\n\r\n  }\r\n}\r\n","export class RenameSampleOssTypeAction {\r\n  static readonly type = '[SampleOssType] Rename';\r\n\r\n  constructor(public name: string) {\r\n\r\n  }\r\n\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {Action, State, StateContext} from \"@ngxs/store\";\r\nimport {RenameSampleOssTypeAction} from \"./rename-sample-oss-type.action\";\r\n\r\nexport interface RenameSampleOssTypeStateModel {\r\n  name: string\r\n}\r\n\r\n@State<RenameSampleOssTypeStateModel>({\r\n  name: 'rename',\r\n  defaults: {\r\n    name: ''\r\n  }\r\n})\r\n@Injectable()\r\nexport class RenameSampleOssTypeState {\r\n\r\n  @Action(RenameSampleOssTypeAction)\r\n  rename(ctx: StateContext<RenameSampleOssTypeStateModel>, action: RenameSampleOssTypeAction): void {\r\n    const state = ctx.getState();\r\n    ctx.setState({\r\n      ...state,\r\n      name: action.name\r\n    });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\n\r\n\r\nexport const environment = {\r\n  production: false,\r\n  API_URL: '/api'\r\n};\r\n\r\n// export const environment = {\r\n//   production: false,\r\n// //  API_URL: 'http://192.168.0.228:8083',\r\n//    API_URL: 'http://microismile.cn:8083',\r\n//   OSS_URL: 'http://microismile.cn:9000/sample-resource',\r\n// };\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}